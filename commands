sed -i 's/<username>[a-zA-Z0-9]\+<\/username>/<username>tech123<\/username>/g' file.xml
sed -i 's|<username>[a-zA-Z0-9]\+|<username>tech123|g' file.xml
[Service]
Environment="KUBELET_EXTRA_ARGS=--tls-cert-file='' --tls-private-key-file='' --kubelet-certificate-authority='' --kubelet-client-certificate='' --kubelet-client-key='' --kubelet-https=false --insecure-skip-tls-verify=true"
[Service]
Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
Environment="KUBELET_KUBECONFIG_ARGS=--kubeconfig=/etc/kubernetes/kubelet.conf"
Environment="KUBELET_EXTRA_ARGS=--tls-cert-file='' --tls-private-key-file='' --kubelet-certificate-authority='' --kubelet-client-certificate='' --kubelet-client-key='' --kubelet-https=false --insecure-skip-tls-verify=true"
ExecStart=
ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_EXTRA_ARGS


          - bash: |
              echo -n "$MyUsername" > username.txt
              echo -n "$MyPassword" > password.txt
              MyUsernameValue=$(cat username.txt)
              MyPasswordValue=$(cat password.txt)
            env:
              MyUsername: $(MyUsername)
              MyPassword: $(MyPassword)
# azure-pipelines.yml

trigger:
  - master

stages:
  - stage: Build
    jobs:
      - job: DecryptSecret
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Decrypt the MyPassword variable
                decryptedPassword=$(echo "$(MyPassword)" | base64 --decode)
                
                # Set the decrypted value as an environment variable
                echo "##vso[task.setvariable variable=DECRYPTED_PASSWORD]$decryptedPassword"
            displayName: 'Decrypt Password'

      - job: UseSecret
      
      
      kubectl get secret $(kubectl get sa default -o jsonpath='{.secrets[0].name}') -o jsonpath='{.data.token}' | base64 --decode
      
      [Service]
Environment="KUBELET_EXTRA_ARGS=--tls-cert-file='' --tls-private-key-file='' --kubelet-certificate-authority='' --kubelet-client-certificate='' --kubelet-client-key='' --kubelet-https=false --insecure-skip-tls-verify=true"


      
encrypted_value=<encrypted value>
echo "$encrypted_value" | openssl enc -aes-256-cbc -a -d -salt -pass pass:mysecretpassword

echo -n "cicduser" | openssl enc -aes-256-cbc -a -salt -pass pass:mysecretpassword

        steps:
          - script: |
              echo "The decrypted password is $DECRYPTED_PASSWORD"
            displayName: 'Print Decrypted Password'
            
            encrypted_cicduser=$(echo -n "cicduser" | openssl enc -aes-256-cbc -a -salt -pass pass:mysecretpassword)
            decrypted_cicduser=$(echo "$encrypted_cicduser" | openssl enc -aes-256-cbc -a -d -salt -pass pass:mysecretpassword)
            sed -i "s/<username>abcd/<username>$decrypted_cicduser/g" pom.xml
            

sed -i 's/aditya/'"$(echo '18 1 3 4 21 19 5 18' | tr ' ' '\n' | awk '{ printf("%c", $0 + 96 - 9) }')/g" pom.xml

echo "aditya" | sed "s/aditya/$(echo '3 9 3 4 21 19 5 18' | tr ' ' '\n' | awk '{ printf("%c", $0 + 96) }')/g"  for cicduser
echo "aditya" | sed "s/aditya/$(echo '3 9 3 4 21 19 5 18' | tr ' ' '\n' | awk '{ printf("%c", $0 + 96) }' | sed 's/^./\u&/')1!/g" for Cicduser1!


