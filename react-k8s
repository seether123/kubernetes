apiVersion: v1
kind: ConfigMap
metadata:
  name: myapp-configmap
data:
  build-env: prod



apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: myapp-container
          image: myapp:latest
          ports:
            - containerPort: 80
          env:
            - name: BUILD_ENV
              valueFrom:
                configMapKeyRef:
                  name: myapp-configmap
                  key: build-env
      imagePullSecrets:
        - name: myapp-secret
        
# First stage: build the application


FROM node:14-alpine as builder

ARG BUILD_ENV=sit
ENV BUILD_ENV=${BUILD_ENV}

WORKDIR /app

COPY package.json package-lock.json ./
RUN npm ci

COPY . .
RUN npm run build:${BUILD_ENV}

# Second stage: serve the application with Nginx
FROM nginx:1.21-alpine

COPY --from=builder /app/build /usr/share/nginx/html

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]

